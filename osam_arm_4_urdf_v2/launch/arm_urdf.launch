<launch>
    <arg name="arg_x" default="0.00" />
    <arg name="arg_y" default="0.00" />
    <arg name="arg_z" default="0.00" />
    <arg name="arg_R" default="0.00" />
    <arg name="arg_P" default="0.00" />
    <arg name="arg_Y" default="0.00" />

    <!--Urdf file path-->
    <param name="robot_description" textfile="$(find osam_arm_4_urdf_v2)/urdf/osam_arm_4_urdf_v2.urdf"/>
    
    <!--spawn a empty gazebo world-->
    <include file="$(find gazebo_ros)/launch/empty_world.launch" />
    <node name="tf_footprint_base" pkg="tf" type="static_transform_publisher" args="0 0 0 0 0 0 base_link base_footprint 40" />

    <!--spawn model-->
    <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-x $(arg arg_x) -y $(arg arg_y) -z $(arg arg_z) -Y $(arg arg_Y) -param robot_description -urdf -model osam_arm_4_urdf_v2 -J joint0 0.0 -J joint1 0.0 -J joint2 0.0 -J joint3 0.0 -J joint4 0.0 -J joint5 0.0 -J joint6 0.0 -J joint7 0.0 -J joint8 0.0" />

    <!--Load and launch the joint trajectory controller-->
    <rosparam file ="$(find osam_arm_4_urdf_v2)/config/joint_trajectory_controller.yaml" command="load"/>
    <node name= "controller_spawner" pkg= "controller_manager" type="spawner" respawn="false" output="screen" args="joint_state_controller arm_controller hand_ee_controller"/>
    <!-- <node name="arm_controller_spawner" pkg="controller_manager" type="controller_manager" args="spawn arm_controller" respawn="false" output="screen"/> -->

    <!-- load other controllers -->
    <node name="ros_control_controller_manager" pkg="controller_manager" type="controller_manager" respawn="false" output="screen" args="load joint_group_position_controller" /> 

    <!-- Robot State Publisher for TF of each joint: publishes all the current states of the joint, then RViz can visualize -->
    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen"/>
</launch>